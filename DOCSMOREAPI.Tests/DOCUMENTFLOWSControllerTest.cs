/*
 * DOCSMOREAPI.Tests
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */
using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Threading.Tasks;
using Newtonsoft.Json.Converters;
using DOCSMOREAPI.PCL;
using DOCSMOREAPI.PCL.Utilities; 
using DOCSMOREAPI.PCL.Http.Client;
using DOCSMOREAPI.PCL.Http.Response;
using DOCSMOREAPI.Tests.Helpers;
using NUnit.Framework;
using DOCSMOREAPI.PCL;
using DOCSMOREAPI.PCL.Controllers;
using DOCSMOREAPI.PCL.Exceptions;

namespace DOCSMOREAPI.Tests
{
    [TestFixture]
    public class DOCUMENTFLOWSControllerTest : ControllerTestBase
    {
        /// <summary>
        /// Controller instance (for all tests)
        /// </summary>
        private static DOCUMENTFLOWSController controller;

        /// <summary>
        /// Setup test class
        /// </summary>
        [SetUp]
        public static void SetUpClass()
        {
            controller = GetClient().DOCUMENTFLOWS;
        }

        /// <summary>
        /// Testcase for testing endpoint Document Flow Collection 
        /// </summary>
        [Test]
        public async Task TestDocumentFlowCollection11() 
        {

            // Perform API call
            List<PCL.Models.DocumentFlowCollectionResponse> result = null;

            try
            {
                result = await controller.GetDocumentFlowCollectionAsync();
            }
            catch(APIException) {};

            // Test response code
            Assert.AreEqual(200, httpCallBackHandler.Response.StatusCode,
                    "Status should be 200");

            // Test headers
            Dictionary<string, string> headers = new Dictionary<string, string>();
            headers.Add("Content-Type", null);

            Assert.IsTrue(TestHelper.AreHeadersProperSubsetOf (
                    headers, httpCallBackHandler.Response.Headers),
                    "Headers should match");

            // Test whether the captured response is as we expected
            Assert.IsNotNull(result, "Result should exist");

            Assert.AreEqual("[{\"_id\":\"58fa4b45b3611e0d28000020\",\"flowName\":\"Bathroom remodeling project\",\"userid\":{\"_id\":\"58fa0ab6b3611e0d2800000c\",\"userEmail\":\"ethitrans@docsmore.com\"},\"primaryKey\":\"_id\",\"firstNameKey\":\"null\",\"lastNameKey\":\"null\",\"apikey\":\"{Document Flow API Key}\",\"createdOn\":\"\\\"2017-04-21T18:11:17.126Z\\\"\"},{\"_id\":\"58fa4bb9b3611e0d28000021\",\"flowName\":\"Kitchen remodeling project\",\"userid\":{\"_id\":\"58fa0ab6b3611e0d2800000c\",\"userEmail\":\"ethitrans@docsmore.com\"},\"primaryKey\":\"_id\",\"firstNameKey\":\"null\",\"lastNameKey\":\"null\",\"apikey\":\"{Document Flow API Key}\",\"createdOn\":\"\\\"2017-04-21T18:13:13.527Z\\\"\"},{\"_id\":\"58fa6cd0b3611e0d2800006f\",\"flowName\":\"Office Paper works\",\"userid\":{\"_id\":\"58fa0ab6b3611e0d2800000c\",\"userEmail\":\"ethitrans@docsmore.com\"},\"primaryKey\":\"_id\",\"firstNameKey\":\"null\",\"lastNameKey\":\"null\",\"apikey\":\"{ Document Flow API Key }\",\"createdOn\":\"\\\"2017-04-21T20:34:24.471Z\\\"\"}]", 
                    TestHelper.ConvertStreamToString(httpCallBackHandler.Response.RawBody),
                    "Response body should match exactly (string literal match)");
        }

    }
}